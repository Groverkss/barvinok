barvinok is a library for counting the number of integer points
in parametric and non-parametric polytopes as well as projections
of such sets.
For parametric polytopes the count is represented by either
an explicit function or a generating function.
The first comes in the shape of a piece-wise step-polynomial.
This is a generalization of both Ehrhart quasi-polynomials
and vector partition functions.
The second is a generalization of an Ehrhart series.

This library shares some functionality with LattE
(http://www.math.ucdavis.edu/~latte/)
and uses PolyLib (http://icps.u-strasbg.fr/polylib/ or
http://www.kotnet.org/~skimo/polylib/) and
NTL (http://shoup.net/ntl/).

Additionally, the following packages can optionally be used
- PIP (http://www.piplib.org/)
- Omega (http://www.cs.umd.edu/projects/omega/ or 
    http://www.liacs.nl/~sverdool/gitweb.cgi?p=omega.git;a=summary)
- GLPK (http://www.gnu.org/software/glpk/)

Both NTL and PolyLib need to have been compiled with GMP
support.
For NTL this means you have to specify
    NTL_GMP_LIP=on

Suppose you want to put everything in /opt,
Then you configure/compile PolyLib using

./configure --with-libgmp=/path/to/gmp --prefix=/opt
make
make install

For NTL,

cd src
./configure NTL_GMP_LIP=on PREFIX=/opt GMP_PREFIX=/path/to/gmp
make
make install

For Omega,

vi -c '/DESTDIR=/|s/=.*$/=\/opt/|wq' Makefile.config
make libomega.a libcode_gen.a
make install

For piplib,

./configure --with-gmp=/path/to/gmp --prefix=/opt
make
make install

Configure this library using

./configure --prefix=/opt --with-polylib=/opt --with-ntl=/opt

or

./configure --prefix=/opt --with-polylib=/opt --with-ntl=/opt --enable-fractional

Then

make
make check
make install

If you want to put any one of these packages in the default location
(typically /usr/local), then the prefix argument can be omitted.
For more information on other arguments,

./configure --help

Please use PolyLib version 5.21.0 or later.

The input format of barvinok_enumerate is the same as that
of testehrhart from the PolyLib distribution.
See the PolyLib manual, barvinok_enumerate.c or the
examples in tests/ehrhart/ .

Note that the fractional representation is subject to change.

The library supports three specialization algorithms.
The first performs a direct specialization using a random vector.
The second performs a "depth-first" incremental specialization.
The third performs a "breadth-first" incremental specialization.

The first is usually the fastest, but can fail if the random
vector happens to be chosen incorrectly.
The incremental algorithms should never fail, but can be slower,
in some cases by quite a bit.  The breadth-first version should
be faster than the depth-first version, especially on polytopes
of moderate dimension with a lot of "structure", but can require
more memory.

Sven Verdoolaege <skimo@kotnet.org>
