AC_INIT
AC_CONFIG_AUX_DIR(.)
AM_INIT_AUTOMAKE(bernstein, 0.02)
AC_SUBST(versioninfo)
versioninfo=1:0:0

AC_CANONICAL_HOST
AC_PROG_CXX
AC_PROG_LIBTOOL

AC_ARG_WITH(default-prefix,
	AS_HELP_STRING([--with-default-prefix=DIR],
	    [Default installation prefix of optional packages]))
if test "${with_default_prefix+set}" = set; then
	if test "${with_libgmp+set}" != set -a \
	   -f "$with_default_prefix/include/gmp.h"; then
		with_libgmp=$with_default_prefix
	fi
	if test "${with_ginac_prefix+set}" != set -a \
	   -f "$with_default_prefix/lib/pkgconfig/ginac.pc"; then
		with_ginac_prefix=$with_default_prefix
	fi
fi

dnl Check for GMP library
AC_MSG_CHECKING(whether to use GMP)
AC_ARG_WITH(libgmp, 
        [  --with-libgmp           DIR Location of the GMP Distribution], 
	gmp_package=$withval, gmp_package=yes)
if test "x$gmp_package" = "xno"; then
	AC_MSG_RESULT(no)
	AC_MSG_ERROR(Need gmp)
else
	AC_MSG_RESULT(yes)
	if test "x$gmp_package" != "xyes"; then
	    GMP_DIR=$gmp_package
	    if test ! -d "$GMP_DIR"; then
	    	AC_ERROR(Directory given for GMP Distribution is not a directory)
	    fi
	    CPPFLAGS="-I$GMP_DIR/include $CPPFLAGS"
	    LDFLAGS="-L$GMP_DIR/lib $LDFLAGS"
	fi
	poly_cv_gmpfatal="no"
	AC_CHECK_HEADER(gmp.h,
		[AC_CHECK_LIB(gmp,main,
		    [],
		    [poly_cv_gmpfatal="yes"])],
		[poly_cv_gmpfatal="yes"])
	if test "$poly_cv_gmpfatal" = "yes"; then
		AC_MSG_ERROR([GMP not found])
	fi
fi

AC_ARG_WITH(polylib_prefix,
	[AS_HELP_STRING([--with-polylib-prefix=DIR],
			[Location of PolyLib installation])])
AC_ARG_WITH(polylib_builddir,
	[AS_HELP_STRING([--with-polylib-builddir=DIR],
			[Location of PolyLib builddir])])

if test "x$with_polylib_prefix" != "x" -a "x$with_polylib_builddir" != "x"; then
	AC_MSG_ERROR(
	[--with-polylib-prefix and --with-polylib-builddir are mutually exclusive])
fi

AC_SUBST(POLYLIB_CPPFLAGS)
AC_SUBST(POLYLIB_LDFLAGS)
AC_SUBST(POLYLIB_LIBS)
AC_MSG_CHECKING(for location of PolyLib)
if test "x$with_polylib_builddir" != "x"; then
	AC_MSG_RESULT(built in $with_polylib_builddir)
	polylib_srcdir=`echo @srcdir@ | $with_polylib_builddir/config.status --file=-`
	AC_MSG_NOTICE(PolyLib sources in $polylib_srcdir)
	POLYLIB_CPPFLAGS="-I$with_polylib_builddir/include -I$polylib_srcdir/include"
	POLYLIB_LIBS="$with_polylib_builddir/libpolylibgmp.la"
else
	POLYLIB_LIBS="-lpolylibgmp"
	if test "${with_default_prefix+set}" = set -a \
	    "${with_polylib_prefix+set}" != set -a \
	    -f "$with_default_prefix/include/polylib/polylibgmp.h"; then
		with_polylib_prefix=$with_default_prefix
	fi
	if test "x$with_polylib_prefix" != "x"; then
		AC_MSG_RESULT(installed in $with_polylib_prefix)
		POLYLIB_CPPFLAGS="-I$with_polylib_prefix/include"
		POLYLIB_LDFLAGS="-L$with_polylib_prefix/lib"
		LD_LIBRARY_PATH="$with_polylib_prefix/lib:$LD_LIBRARY_PATH"
		export LD_LIBRARY_PATH
	else
		AC_MSG_RESULT(installed in standard location)
	fi
	AC_CHECK_LIB(polylibgmp, PolyhedronTSort,[],[
		AC_MSG_ERROR(Need PolyLib)
	])
fi


AC_ARG_WITH(ginac_prefix,
	[AS_HELP_STRING([--with-ginac-prefix=DIR],[Installation prefix of GiNaC])])
if test "x$with_ginac_prefix" != "x"; then
	export PKG_CONFIG_PATH=$with_ginac_prefix/lib/pkgconfig:$PKG_CONFIG_PATH
fi
PKG_CHECK_MODULES(ginac, ginac)

AC_CONFIG_HEADERS(config.h)
AC_OUTPUT(Makefile)
