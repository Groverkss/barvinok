AC_INIT
AM_INIT_AUTOMAKE(parker, 0.01)

AC_PROG_CXX
AM_PROG_LEX
AC_PROG_YACC
AC_PROG_LIBTOOL

AC_MSG_CHECKING(for mona)
AC_ARG_WITH(mona,
        [  --with-mona=DIR	  mona *source* directory ], [], [
	AC_MSG_RESULT(not specified)
	])

if test "x$with_mona" != "x"; then
	AC_SUBST(MONAPATH)
	AC_SUBST(MONA_OBJ)
	MONAPATH=$with_mona
	MONA_OBJ="$MONAPATH/DFA/libdfa.a $MONAPATH/BDD/libbdd.a \
		  $MONAPATH/Mem/libmem.a"
	for i in $MONA_OBJ; do
		if test ! -f $i; then
			with_mona=""
		fi
	done
	if test "x$with_mona" = "x"; then
		AC_MSG_RESULT(not found)
	else
		AC_MSG_RESULT($MONAPATH)
	fi
fi

if test "x$with_mona" = "x"; then
	AC_MSG_WARN(http://www.brics.dk/mona/download)
	AC_MSG_ERROR(mona required)
fi

AC_ARG_WITH(omega,
        [  --with-omega=DIR   ])


AC_LANG(C++)

if test "x$with_omega" != "x"; then
    CPPFLAGS="-I$with_omega/include/omega $CPPFLAGS"
    LDFLAGS="-L$with_omega/lib $LDFLAGS"
else
    for i in /usr/include /usr/local/include; do
	if test -f $i/omega/omega.h; then
	    CPPFLAGS="-I$i/omega $CPPFLAGS"
	fi
    done
fi

AC_CHECK_HEADER(omega.h,[],[AC_MSG_ERROR(Can't find omega headers.)])

AC_OUTPUT(Makefile)
